from tkinter import*
import time
import sys
import locale
from datetime import date
from datetime import datetime
import requests
from PIL import Image, ImageTk
import os

#Globale Variablen und Einstellungen

hintergrund = 'black'

root=Tk()

root.attributes('-fullscreen', True)    #Vollbild ohne Leiste bei Start

root.config(background=hintergrund)

#########################################################################################################################################################################################################################################################################################
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
#########################################################################################################################################################################################################################################################################################

###Bilder einbinden###

#Sonnenaufgang
Bild = Image.open("SAUFGANG.png")
Bild2 = Bild.resize((70,70), Image.ANTIALIAS)
Sonnenaufgang = ImageTk.PhotoImage(Bild2)

#Sonnenuntergang
Bild3 = Image.open("SUNTERGANG.png")
Bild4 = Bild3.resize((70,70), Image.ANTIALIAS)
Sonnenuntergang = ImageTk.PhotoImage(Bild4)

#Wetterbilder
klar = Image.open("Test.png")
klar1 = klar.resize((120,120), Image.ANTIALIAS)
klarerhimmel = ImageTk.PhotoImage(klar1)

#########################################################################################################################################################################################################################################################################################
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
#########################################################################################################################################################################################################################################################################################

###Wetterabfrage über API von openweathermap.org###



###Alle Funtkions- und Methodendefinitionen###

# Abfrage der Wetterdaten

def Abfrage():

    url= 'http://api.openweathermap.org/data/2.5/weather?appid=&q=tuebingen'

    data=requests.get(url).json()
    
    ###Sortieren der Daten###

    Azeit = data['sys']['sunrise']
    Uzeit = data['sys']['sunset']
    aktTemp = data['main']['temp']
    minTempK = data['main']['temp_min']
    maxTempK = data['main']['temp_max']
    #weather = data['weather']['id']



    ###Uhrzeit von UNIX in HH:MM###
    
    EAZeit = datetime.fromtimestamp(Azeit).strftime('%H:%M')
    Aufgang = Label(master = root, text=[EAZeit, "Uhr"], font=('Verdana', 30), bg= hintergrund, fg = 'white' )
    Aufgang.place(x=900, y=680)

    EUZeit = datetime.fromtimestamp(Uzeit).strftime('%H:%M')
    Untergang= Label(master = root, text=[EUZeit, "Uhr"], font=('Verdana', 30), bg= hintergrund, fg = 'white' )
    Untergang.place(x=900, y=750)

    ###aktuelle Temperatur###
    aktTemp2 = int(aktTemp)
    aktTempC = aktTemp2-273
    Temp = Label(master=root, text=[aktTempC, "°C"], font=('Verdana', 80), bg=hintergrund, fg='white')
    Temp.place(x=890, y=500)
    
    #minimale Tagestemperatur

    minTemp2 = int(minTempK)
    minTempC = minTemp2 - 273
    minTemp = Label(master=root, text=["min.:",minTempC, "°C"], font=('Verdana', 30), bg=hintergrund, fg='white')
    minTemp.place(x=1200, y=680)

    #maximale Tagestemperatur

    maxTemp2 = int(maxTempK)
    maxTempC = maxTemp2 - 273
    maxTemp = Label(master=root, text=["max.:",maxTempC,"°C"], font=('Verdana', 30), bg=hintergrund, fg='white')
    maxTemp.place(x=1200, y=750)

    
    ###Bild Sonnenaufgang###

aBild = Label(master=root, image=Sonnenaufgang, borderwidth=0)
aBild.image=Sonnenaufgang
aBild.place(x=830, y=670)


    ###Bild Sonnenuntergang###

uBild = Label(master=root, image=Sonnenuntergang, borderwidth=0)
uBild.image=Sonnenuntergang
uBild.place(x=830, y=740)

    #Wetterzeichen

# Zeit
def tag( ):
    global datum
    neuesdatum=time.strftime('%d.%m.%Y')
    if neuesdatum!=datum:
        datum=neuesdatum
        kalender.config(text=datum)
    uhr.after(200, tag)

def tick( ):
    global zeit
    neuezeit = time.strftime('%H:%M')
    if neuezeit!=zeit:
        zeit=neuezeit
        uhr.config(text=zeit)
    uhr.after(200, tick)
    
    
def tick2( ):
    global zeit
    neuezeit = time.strftime('%S')
    if neuezeit!=zeit:
        zeit=neuezeit
        uhrsek.config(text=zeit)
    uhrsek.after(100, tick2)
   
#########################################################################################################################################################################################################################################################################################
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
#########################################################################################################################################################################################################################################################################################

#Startbildschirm mit Uhrzeit, Datum, Wochentag, Sonnenauf-/untergangszeit, Temperatur und Wetter

    
uhr = Label(master=root, font=('Verdana', 100),bg=hintergrund, fg='white')
uhr.place(x=550, y=63)

uhrsek = Label(master=root, font=('Verdana', 60),bg=hintergrund, fg='grey')
uhrsek.place(x=980, y=71)

wochentag=Label(master=root, text=["Montag", "Dienstag", "Mittwoch", "Donnerstag", "Freitag", "Samstag", "Sonntag"][date(int(time.strftime('%Y')),int(time.strftime('%m')),int(time.strftime('%d'))).weekday()], font=('Verdana', 40), bg=hintergrund, fg='white')
wochentag.place(x=0, y=650)

kalender = Label(master=root, font=('Verdana', 50), bg=hintergrund, fg='white')
kalender.place(x=0, y=740)

zeit=''
datum=''

#########################################################################################################################################################################################################################################################################################
#---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------#
#########################################################################################################################################################################################################################################################################################

#Funktionen für Datums- und Uhranzeige

tag()
tick()
tick2()
Abfrage()



root.mainloop()
